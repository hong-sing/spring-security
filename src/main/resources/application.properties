server.port=8080
server.servlet.context-path=/
server.servlet.encoding.charset=utf-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/security
spring.datasource.username=cos
spring.datasource.password=cos1234

spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true

#spring.security.oauth2.client.registration.google.client-id=클라이언트ID
#spring.security.oauth2.client.registration.google.client-secret=클라이언트 보안 시크릿
#spring.security.oauth2.client.registration.google.scope=email,profile

#spring.security.oauth2.client.registration.facebook.client-id=클라이언트ID
#spring.security.oauth2.client.registration.facebook.client-secret=앱 시크릿 코드
#spring.security.oauth2.client.registration.facebook.scope=email,public_profile

#spring.security.oauth2.client.registration.naver.client-id=Client ID
#spring.security.oauth2.client.registration.naver.client-secret=Client Secret
#spring.security.oauth2.client.registration.naver.scope=name,email
#spring.security.oauth2.client.registration.naver.client-name=Naver
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
##spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

# 깃허브에 올라가지 않게 oauth 프로필로 만듦
spring.profiles.include=oauth